########################################################
# Custom .travis.yml config that uses a linode
# instance to catch the build stages jobs results text
# file populated from TRAVIS_TEST_RESULT (0|1) environment
# variable.
#
# > TRAVIS_TEST_RESULT: 0 if all commands in the script section
#   (up to the point this environment variable is referenced)
#   have exited with zero; 1 otherwise.
#
# Based on that file text string(0's and 1's), if there
# is a 1 within the string, a failure script is executed.
#
# RegEx can be enhanced to run multiple scripts based on
# the desired use case.
########################################################

dist: focal
os: linux
language: minimal
before_install:
  # Install sshpass to pass linode creds
  - sudo apt-get install -y sshpass

jobs:
  allow_failures:
    env:
      - ALLOW_FAIL=true
  include:
    - stage: Get file ready to catch subsequent stage jobs results
      script:
        - touch results.txt
        # Upload the empty text file to linode server
        - sshpass -e scp -o "StrictHostKeyChecking=no" $TRAVIS_BUILD_DIR/results.txt root@172.105.39.242:/home/temp
        
    - stage: Run tests
      env:
        - ALLOW_FAIL=true
      script:
        # Download the file from linode server to build VM
        - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
        # Delete the file from linode server
        - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt
        
        - echo Done
        - echo $TRAVIS_TEST_RESULT >> results.txt
        - cat results.txt
        # Upload the populated file to linode server
        - sshpass -e scp -o "StrictHostKeyChecking=no" $TRAVIS_BUILD_DIR/results.txt root@172.105.39.242:/home/temp
    - env:
        - ALLOW_FAIL=true
      script:
        # Download the file from linode server to build VM
        - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
        # Delete the file from linode server
        - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt
        
        - false # intentional failure here to test the use case
        #- true
        - echo $TRAVIS_TEST_RESULT >> results.txt
        - cat results.txt
        # Upload the populated file to linode server
        - sshpass -e scp $TRAVIS_BUILD_DIR/results.txt root@172.105.39.242:/home/temp
    - script:
        # Download the file from linode server to build VM
        - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
        # Delete the file from linode server
        - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt
        
        - echo done
        - echo $TRAVIS_TEST_RESULT >> results.txt
        - cat results.txt
        # Upload the populated file to linode server
        - sshpass -e scp $TRAVIS_BUILD_DIR/results.txt root@172.105.39.242:/home/temp
    - stage: Execute script based on the build stages jobs results!
      script:
        # Download the file from linode server to build VM
        - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
        # Delete the file from linode server
        - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt
        
        - cat results.txt
        - status=$( cat results.txt )
        - echo $status
        
        # Run scripts based on results from stage jobs
        - if [ "$status" =~ [1] ]; then
            echo "Run failure script"; 
          else 
            echo "Run passing script"; 
          fi
