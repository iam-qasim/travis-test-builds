########################################################
# Custom .travis.yml config that uses a linode
# instance to catch the build stages jobs result
# from TRAVIS_TEST_RESULT (0|1) environment variable
# and populates the text file.
# Based on that file text string(0's and 1's), if there
# is a 1 within the string, a failure script is executed.

# > TRAVIS_TEST_RESULT: 0 if all commands in the script section
#   (up to the point this environment variable is referenced)
#   have exited with zero; 1 otherwise.

# RegEx can be enhanced to run multiple scripts based on
# the desired use case.
########################################################

dist: focal
os: linux
language: minimal
before_install:
  # Install sshpass to pass linode creds
  - sudo apt-get install -y sshpass
before_script:
  # Download the file from remote server to build VM
  - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
  # Delete the file from remote server
  - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt

jobs:
  allow_failures:
    env:
      - ALLOW_FAIL=true
  include:
    - stage: Get file ready to catch subsequent stage jobs results
      before_script: skip
      script:
        - touch results.txt
        - sshpass -e scp -o "StrictHostKeyChecking=no" $TRAVIS_BUILD_DIR/results.txt root@172.105.39.242:/home/temp
    - stage: Run tests
      env:
        - ALLOW_FAIL=true
      script:
        # Download the file from remote server to build VM
        - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
        # Delete the file from remote server
        - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt
        
        - echo Done
        - echo $TRAVIS_TEST_RESULT > results.txt
        - cat results.txt
        - sshpass -e scp -o "StrictHostKeyChecking=no" $TRAVIS_BUILD_DIR/results.txt root@172.105.39.242:/home/temp
    - env:
        - ALLOW_FAIL=true
      script:
        # Download the file from remote server to build VM
        - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
        # Delete the file from remote server
        - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt
        
        - false # intentional failure here to test the use case
        - echo $TRAVIS_TEST_RESULT >> results.txt
        - cat results.txt
        - sshpass -e scp $TRAVIS_BUILD_DIR/results.txt root@172.105.39.242:/home/temp
    - script:
        # Download the file from remote server to build VM
        - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
        # Delete the file from remote server
        - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt
        
        - echo done
        - echo $TRAVIS_TEST_RESULT >> results.txt
        - cat results.txt
        - sshpass -e scp $TRAVIS_BUILD_DIR/results.txt root@172.105.39.242:/home/temp
    - stage: Run Failure Script
      script:
        # Download the file from remote server to build VM
        - sshpass -e scp -o "StrictHostKeyChecking=no" root@172.105.39.242:/home/temp/results.txt $TRAVIS_BUILD_DIR
        # Delete the file from remote server
        - sshpass -e ssh root@172.105.39.242 rm -f /home/temp/results.txt
        
        - cat results.txt
        - status=$( cat results.txt )
        - echo $status
        - if [[ "$status" =~ [1] ]]; then
            echo "RUN FAILURE SCRIPT";
          fi
